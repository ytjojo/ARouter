apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    namespace = "com.alibaba.android.arouter.demo.kotlin"
    compileSdkVersion Integer.parseInt(COMPILE_SDK_VERSION)

    defaultConfig {
        minSdkVersion Integer.parseInt(MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(TARGET_SDK_VERSION)
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    // 添加Kotlin编译选项，使其与Java编译选项保持一致
    kotlinOptions {
        jvmTarget = '1.8'
    }

    // 如果你用了 kapt，再补一行（AGP 8.x 推荐）
    kapt {
        javacOptions {
            option('-target', '1.8')
            option('-source', '1.8')
        }
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    lint {
        abortOnError false          // 或者 true，根据需要
        checkReleaseBuilds false    // 如果也不想检查 release 包
    }
}

dependencies {
    implementation project(':arouter-api')
//    implementation project(':arouter-annotation')
//    api "${publishedGroupId}:arouter-annotation:1.0.1"
    kapt project(':arouter-compiler')
    implementation "androidx.appcompat:appcompat:${ANDROIDX_VERSION}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    
    // 排除可能引起冲突的旧版本kotlin库
    configurations {
        all {
            exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'
            exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk7'
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KaptGenerateStubs).configureEach {
    kotlinOptions.jvmTarget = '1.8'
}